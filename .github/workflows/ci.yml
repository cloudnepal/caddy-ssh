# Used as inspiration: https://github.com/mvdan/github-actions-golang

name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    strategy:
      # Default is true, cancels jobs for other platforms in the matrix if one fails
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest]
        go: [ '1.17' ]

        # Set some variables per OS, usable via ${{ matrix.VAR }}
        # CADDY_BIN_PATH: the path to the compiled Caddy binary, for artifact publishing
        # SUCCESS: the typical value for $? per OS (Windows/pwsh returns 'True')
        # include:
        # - os: ubuntu-latest
        #   CADDY_BIN_PATH: ./cmd/caddy/caddy
        #   SUCCESS: 0

        # - os: macos-latest
        #   CADDY_BIN_PATH: ./cmd/caddy/caddy
        #   SUCCESS: 0

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Print Go version and environment
      id: vars
      run: |
        printf "Using go at: $(which go)\n"
        printf "Go version: $(go version)\n"
        printf "\n\nGo environment:\n\n"
        go env
        printf "\n\nSystem environment:\n\n"
        env
        printf "Git version: $(git version)\n\n"
        # Calculate the short SHA1 hash of the git commit
        echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
        echo "::set-output name=go_cache::$(go env GOCACHE)"

    - name: Cache the build cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.vars.outputs.go_cache }}
        key: ${{ runner.os }}-${{ matrix.go }}-go-ci-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.go }}-go-ci

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build Caddy-SSH
      env:
        CGO_ENABLED: 0
      run: |
        go install -v github.com/caddyserver/xcaddy/cmd/xcaddy@latest
        $(go env GOPATH)/bin/xcaddy build --with github.com/mohammed90/caddy-ssh=. --output caddy-ssh

    - name: Publish Build Artifact
      uses: actions/upload-artifact@v1
      with:
        name: caddy-ssh_${{ runner.os }}_go${{ matrix.go }}_${{ steps.vars.outputs.short_sha }}
        path: caddy-ssh

    # Commented bits below were useful to allow the job to continue
    # even if the tests fail, so we can publish the report separately
    # For info about set-output, see https://stackoverflow.com/questions/57850553/github-actions-check-steps-status
    - name: Run tests
      # id: step_test
      # continue-on-error: true
      run: |
        go test -v -coverprofile="cover-profile.out" -short -race ./...

  goreleaser-check:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: check
        env:
          TAG: ${{ steps.vars.outputs.version_tag }}
